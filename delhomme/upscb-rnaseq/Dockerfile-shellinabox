FROM delhomme/upscb-ngs-preprocessing
MAINTAINER Nicolas Delhomme (nicolas.delhomme@umu.se)

# Versions
ARG CPU=4

# STAR, kallisto, salmon
ARG STR_VERSION=2.7.10b
ARG KLT_VERSION=0.48.0
ARG SLM_VERSION=1.10.0

# Working dir
RUN	mkdir build
WORKDIR /build

# Aptitude packages
# only needed for compiling salmon
#RUN apt update && apt install -y cmake automake libboost-all-dev libtbb-dev libcereal-dev libjemalloc-dev

# STAR
RUN curl -L -O https://github.com/alexdobin/STAR/archive/refs/tags/${STR_VERSION}.tar.gz && \
  tar -xf ${STR_VERSION}.tar.gz && cd STAR-${STR_VERSION}/bin/Linux_x86_64_static && cp STAR /usr/local/bin

# kallisto
RUN curl -L -O  https://github.com/pachterlab/kallisto/releases/download/v${KLT_VERSION}/kallisto_linux-v${KLT_VERSION}.tar.gz && \
	tar -xf kallisto_linux-v${KLT_VERSION}.tar.gz && cp kallisto/kallisto /usr/local/bin

# Salmon
# 2021-10-15 ships with libc6 which is system incompatible v < 2.29
# so disabling the fetch of the archive
#RUN curl -L -O https://github.com/COMBINE-lab/salmon/releases/download/v${SLM_VERSION}/salmon-${SLM_VERSION}_linux_x86_64.tar.gz && \
#	tar -zxf salmon-${SLM_VERSION}_linux_x86_64.tar.gz && cp salmon-${SLM_VERSION}_linux_x86_64/bin/salmon /usr/local/bin/ && \
#	cp salmon-${SLM_VERSION}_linux_x86_64/lib/lib* /usr/local/lib

# installing in /opt instead
RUN curl -L -O https://github.com/COMBINE-lab/salmon/releases/download/v${SLM_VERSION}/salmon-${SLM_VERSION}_linux_x86_64.tar.gz && \
	tar -zxf salmon-${SLM_VERSION}_linux_x86_64.tar.gz && mkdir /opt/salmon && \
	cp -r salmon-latest_linux_x86_64/bin /opt/salmon  && cp -r salmon-latest_linux_x86_64/lib /opt/salmon
# Rob's no consistent...
#	cp -r salmon-${SLM_VERSION}_linux_x86_64/bin /opt/salmon  && cp -r salmon-${SLM_VERSION}_linux_x86_64/lib /opt/salmon
	

# 2021-10-16 Salmon is a pain to build
#RUN curl -L -O https://github.com/COMBINE-lab/salmon/archive/refs/tags/v${SLM_VERSION}.tar.gz && \
#	tar -zxf v${SLM_VERSION}.tar.gz && cd salmon-${SLM_VERSION} && mkdir build && cd build && \
#	cmake .. && make -j ${CPU} && make install && cp ../lib/lib* /usr/local/lib/ && \
#	cp ../bin/salmon /usr/local/bin/

# gffread
WORKDIR /build
RUN git clone https://github.com/gpertea/gclib && \
    git clone https://github.com/gpertea/gffread && \
    cd gffread && make -j ${CPU} && cp gffread /usr/local/bin

# Clean up
WORKDIR /
RUN rm -rf /build

# Extend path
RUN echo 'export PATH=/opt/salmon/bin:$PATH' >> /home/training/.profile

# CMD
CMD ["/usr/bin/supervisord","-c","/etc/supervisor/conf.d/supervisord.conf"]
